{"version":3,"sources":["Snake/SnakeComponent.jsx","Food/Food.jsx","Header/Lives/Lives.jsx","assets/icons/soundsOff.svg","assets/icons/soundsOn.svg","assets/icons/musicOff.svg","assets/icons/musicOn.svg","Header/Header.jsx","assets/audio/dead.mp3","assets/audio/eat.mp3","assets/audio/up.mp3","assets/audio/down.mp3","assets/audio/left.mp3","assets/audio/right.mp3","assets/audio/mainSound.mp3","AppTemp.js","assets/icons/arrowLeft.svg","assets/icons/arrowRight.svg","assets/icons/arrowUp.svg","assets/icons/arrowDown.svg","App.js","index.js"],"names":["SnakeComponent","props","snakeCordinates","map","cordinate","index","points","left","top","className","style","Food","food","Lives","lives","Header","music","turnOnSounds","turnOffSounds","musicVolumUp","musicVolumDown","soundsVolumUp","soundsVolumDown","onClick","pause","src","musicOff","alt","play","musicOn","soundsOff","soundsOn","score","localStorage","getItem","split","AppTemp","setRandomCordinates","Math","floor","random","setKey","e","window","event","keyCode","includes","state","direction","setState","isSounds","up","down","right","restartGame","movementsSnake","square","front","length","push","shift","collisionWalls","scoreKey","lastData","console","log","intData","el","sort","a","b","mainCount","mainResult","splice","setItem","join","dead","mainSound","clearInterval","timer","popUp","removeLive","endGame","collisionSnake","pop","forEach","collisionEat","eat","growSnake","newSquares","unshift","startGame","volume","speed","hightScore","Audio","deadAudio","eatAudio","upAudio","rightAudio","leftAudio","downAudio","mainSoundAudio","this","setInterval","document","onkeydown","React","Component","App","value","redyGame","arrowUp","arrowRight","arrowLeft","arrowDown","ReactDOM","render","StrictMode","getElementById"],"mappings":"qSAGe,SAASA,EAAeC,GACnC,OACI,8BACKA,EAAMC,gBAAgBC,KAAI,SAACC,EAAWC,GAEnC,IAAMC,EAAS,CACXC,KAAK,GAAD,OAAIH,EAAU,GAAd,KACJI,IAAI,GAAD,OAAIJ,EAAU,GAAd,MAGP,OACI,qBAAiBK,UAAU,mBAAmBC,MAAOJ,GAA3CD,Q,MCXf,SAASM,EAAKV,GAEzB,IAAMG,EAAY,CACdG,KAAK,GAAD,OAAIN,EAAMW,KAAK,GAAf,KACJJ,IAAI,GAAD,OAAIP,EAAMW,KAAK,GAAf,MAGP,OACI,qBAAKH,UAAU,OAAOC,MAAON,ICTtB,SAASS,EAAMZ,GAI1B,OACI,yCACU,sBAAMQ,UAAU,QAAhB,SAAyBR,EAAMa,W,UCRlC,MAA0B,sCCA1B,MAA0B,qCCA1B,MAA0B,qCCA1B,MAA0B,oCCQ1B,SAASC,EAAOd,GAAQ,IAC9Be,EAA8Ff,EAA9Fe,MAAMC,EAAwFhB,EAAxFgB,aAAaC,EAA2EjB,EAA3EiB,cAAcC,EAA6DlB,EAA7DkB,aAAaC,EAAgDnB,EAAhDmB,eAAeC,EAAiCpB,EAAjCoB,cAAcC,EAAmBrB,EAAnBqB,gBAEhF,OACI,sBAAKb,UAAU,SAAf,UACI,sBAAKA,UAAU,kBAAf,UACI,wBAAQc,QAAS,kBAAKP,EAAMQ,SAA5B,SACI,qBAAKC,IAAKC,EAAUC,IAAI,eAE5B,wBAAQJ,QAAS,kBAAKP,EAAMY,QAA5B,SACI,qBAAKH,IAAKI,EAASF,IAAI,cAE3B,wBAAQJ,QAAS,kBAAKL,KAAtB,SACI,qBAAKO,IAAKK,EAAWH,IAAI,gBAE7B,wBAAQJ,QAAS,kBAAKN,KAAtB,SACI,qBAAKQ,IAAKM,EAAUJ,IAAI,eAE5B,wBAAQJ,QAAS,kBAAKJ,KAAtB,6BACA,wBAAQI,QAAS,kBAAKH,KAAtB,+BACA,wBAAQG,QAAS,kBAAMF,KAAvB,8BACA,wBAAQE,QAAS,kBAAMD,KAAvB,mCAEJ,sBAAKb,UAAU,eAAf,UACI,sBAAKA,UAAU,QAAf,mBAA6B,+BAAOR,EAAM+B,WAC1C,sBAAKvB,UAAU,aAAf,wBAAuC,+BAAOwB,aAAaC,QAAb,cAAqCD,aAAaC,QAAQ,aAAaC,MAAM,KAAK,QAChI,cAACtB,EAAD,CAAOC,MAAOb,EAAMa,cClCrB,UAA0B,iCCA1B,MAA0B,gCCA1B,MAA0B,+BCA1B,MAA0B,iCCA1B,MAA0B,iCCA1B,MAA0B,kCCA1B,MAA0B,sCCmW1BsB,E,kDAtVb,WAAYnC,GAAO,IAAD,8BAChB,cAAMA,IA0DRoC,oBAAsB,WAOpB,MAAO,CAJ2D,EAA1DC,KAAKC,OAAO,GAAAD,KAAKE,SAFf,GAEmD,GACK,EAA1DF,KAAKC,OAAO,GAAAD,KAAKE,SAHf,GAGmD,KA/D7C,EAqElBC,OAAS,SAACC,GAER,QADAA,EAAIA,GAAKC,OAAOC,OACNC,SACR,KAAK,GACE,CAAC,KAAM,QAAQC,SAAS,EAAKC,MAAMC,aACtC,EAAKC,SAAS,CAAED,UAAW,OACxB,EAAKD,MAAMG,UACZ,EAAKH,MAAMI,GAAGvB,QAIlB,MACF,KAAK,GACE,CAAC,KAAM,QAAQkB,SAAS,EAAKC,MAAMC,aACtC,EAAKC,SAAS,CAAED,UAAW,SACxB,EAAKD,MAAMG,UACZ,EAAKH,MAAMK,KAAKxB,QAIpB,MACF,KAAK,GACE,CAAC,OAAQ,SAASkB,SAAS,EAAKC,MAAMC,aACzC,EAAKC,SAAS,CAAED,UAAW,SACxB,EAAKD,MAAMG,UACX,EAAKH,MAAMxC,KAAKqB,QAIrB,MACF,KAAK,GACE,CAAC,OAAQ,SAASkB,SAAS,EAAKC,MAAMC,aACzC,EAAKC,SAAS,CAAED,UAAW,UACxB,EAAKD,MAAMG,UACZ,EAAKH,MAAMM,MAAMzB,QAIrB,MACF,KAAK,GACH,EAAK0B,gBA7GO,EAoHlBC,eAAiB,WACf,IAAIC,EAAM,YAAO,EAAKT,MAAM7C,iBACxBuD,EAAQD,EAAOA,EAAOE,OAAS,GAEnC,OAAO,EAAKX,MAAMC,WAChB,IAAK,QACHS,EAAQ,CAACA,EAAM,GAAK,EAAGA,EAAM,IAC7B,MACF,IAAK,OACHA,EAAQ,CAACA,EAAM,GAAIA,EAAM,GAAK,GAC9B,MACF,IAAK,OACHA,EAAQ,CAACA,EAAM,GAAK,EAAGA,EAAM,IAC7B,MACF,IAAK,KACHA,EAAQ,CAACA,EAAM,GAAIA,EAAM,GAAK,GAGlCD,EAAOG,KAAKF,GACZD,EAAOI,QACP,EAAKX,SAAS,CAAC/C,gBAAgBsD,KAxIf,EA8IlBK,eAAiB,WACf,IAAIJ,EAAQ,EAAKV,MAAM7C,gBAAgB,EAAK6C,MAAM7C,gBAAgBwD,OAAS,GAC3E,GAAGD,EAAM,IAAM,KAAOA,EAAM,IAAM,KAAOA,EAAM,GAAK,GAAKA,EAAM,GAAK,EAAE,CACpE,GAAuB,GAApB,EAAKV,MAAMjC,MAAW,CACvB,IAAIgD,EAAQ,YACRC,EAAW9B,aAAaC,QAAQ4B,IAAa,GACjDE,QAAQC,IAAIF,GAEZ,IAAIG,EAAsB,IAAZH,EAAiBA,EAAS5B,MAAM,KAAKhC,KAAI,SAAAgE,GAAE,OAAKA,KAAM,GACpEH,QAAQC,IAAIC,GACZA,EAAQP,KAAK,EAAKZ,MAAMf,OACxBkC,EAAQE,MAAK,SAACC,EAAEC,GAAH,OAASA,EAAID,KAC1BL,QAAQC,IAAIC,GACZ,IAAIK,EAAYL,EAAQR,OAAS,GAAK,GAAKQ,EAAQR,OAC/Cc,EAAaN,EAAQO,OAAO,EAAEF,GAGlCtC,aAAayC,QAAQZ,EAArB,UAAiCU,EAAWG,KAAK,OAC9C,EAAK5B,MAAMG,UACZ,EAAKH,MAAM6B,KAAKhD,OAElB,EAAKmB,MAAM8B,UAAUrD,QACrBsD,cAAc,EAAK/B,MAAMgC,OACzB,EAAK9B,SAAS,CAAC+B,OAAM,IAGpB,EAAKjC,MAAMG,UACZ,EAAKH,MAAM6B,KAAKhD,OAElB,EAAKqD,aACL,EAAKC,YA5KS,EAiLlBC,eAAiB,WACf,IAAI3B,EAAM,YAAO,EAAKT,MAAM7C,iBACxBuD,EAAQD,EAAOA,EAAOE,OAAS,GACnCF,EAAO4B,MAEP5B,EAAO6B,SAAQ,SAAAlB,GACVV,EAAM,IAAMU,EAAG,IAAMV,EAAM,IAAMU,EAAG,KAClC,EAAKpB,MAAMG,UACZ,EAAKH,MAAM6B,KAAKhD,OAElB,EAAKsD,UACL,EAAKD,kBA5LO,EAkMlBK,aAAe,WACb,IAAI7B,EAAQ,EAAKV,MAAM7C,gBAAgB,EAAK6C,MAAM7C,gBAAgBwD,OAAS,GACvE9C,EAAO,EAAKmC,MAAMnC,KAEnB6C,EAAM,IAAM7C,EAAK,IAAM6C,EAAM,IAAM7C,EAAK,KACtC,EAAKmC,MAAMG,UACZ,EAAKH,MAAMwC,IAAI3D,OAGjB,EAAKqB,SAAS,CACZrC,KAAK,EAAKyB,sBACVL,MAAM,EAAKe,MAAMf,MAAM,KAGzB,EAAKwD,cAhNS,EAoNlBA,UAAY,WACV,IAAIC,EAAU,YAAO,EAAK1C,MAAM7C,iBAChCuF,EAAWC,QAAQ,IACnB,EAAKzC,SAAS,CAAC/C,gBAAgBuF,KAvNf,EA0NlBR,WAAa,WACX,EAAKhC,SAAS,CAACnC,MAAM,EAAKiC,MAAMjC,MAAQ,KA3NxB,EAgOlBoE,QAAU,WACR,EAAKjC,SAAS,CACV/C,gBAAgB,CACd,CAAC,EAAE,GACH,CAAC,EAAE,IAEL8C,UAAU,WAtOE,EA2OlBM,YAAc,WAEZ,EAAKL,UAAS,SAACF,GACb,MAAO,CAACiC,OAAM,MAEhB,EAAK/E,MAAM0F,WAAU,IAhPL,EAoPlB1E,aAAe,WACb,EAAKgC,UAAS,SAACF,GAAW,MAAM,CAACG,UAAS,OArP1B,EAwPlBhC,cAAgB,WACd,EAAK+B,UAAS,SAACF,GAAW,MAAM,CAACG,UAAS,OAzP1B,EA4PlB/B,aAAe,WACV,EAAK4B,MAAM8B,UAAUe,OAAS,IAC/B,EAAK7C,MAAM8B,UAAUe,QAAU,KA9PjB,EAmQlBxE,eAAiB,WACZ,EAAK2B,MAAM8B,UAAUe,QAAU,KAChC,EAAK7C,MAAM8B,UAAUe,QAAU,KArQjB,EA0QlBtE,gBAAkB,WACA,CAAC,EAAKyB,MAAMI,GAAG,EAAKJ,MAAMK,KAAK,EAAKL,MAAMxC,KAAK,EAAKwC,MAAMM,MAAM,EAAKN,MAAMwC,IAAI,EAAKxC,MAAM6B,MAChGS,SAAQ,SAAAlB,GACbA,EAAGyB,QAAU,KACdzB,EAAGyB,QAAU,QA9QD,EAoRlBvE,cAAgB,WACE,CAAC,EAAK0B,MAAMI,GAAG,EAAKJ,MAAMK,KAAK,EAAKL,MAAMxC,KAAK,EAAKwC,MAAMM,MAAM,EAAKN,MAAMwC,IAAI,EAAKxC,MAAM6B,MAChGS,SAAQ,SAAAlB,GACbA,EAAGyB,OAAS,IACbzB,EAAGyB,QAAU,QArRjB,EAAK7C,MAAQ,CACX7C,gBAAgB,CACd,CAAC,EAAE,GACH,CAAC,EAAE,IAELU,KAAK,EAAKyB,sBACVW,UAAU,QACV6C,MAAM,IACN/E,MAAM,EACNkB,MAAM,EACN8D,WAAW,EACVlB,KAAK,IAAImB,MACTR,IAAI,IAAIQ,MACR5C,GAAG,IAAI4C,MACP1C,MAAM,IAAI0C,MACVxF,KAAK,IAAIwF,MACT3C,KAAK,IAAI2C,MACTlB,UAAU,IAAIkB,MACdhB,MAAM,EACNC,OAAM,EACN9B,UAAS,GAKZ,EAAKH,MAAM6B,KAAKnD,IAAMuE,EACtB,EAAKjD,MAAMwC,IAAI9D,IAAMwE,EACrB,EAAKlD,MAAMI,GAAG1B,IAAMyE,EACpB,EAAKnD,MAAMM,MAAM5B,IAAM0E,EACvB,EAAKpD,MAAMxC,KAAKkB,IAAM2E,EACtB,EAAKrD,MAAMK,KAAK3B,IAAM4E,EACtB,EAAKtD,MAAM8B,UAAUpD,IAAM6E,EAlCX,E,qDAsClB,WACCC,KAAKxD,MAAMgC,MAAQyB,YAAYD,KAAKhD,eAAegD,KAAKxD,MAAM8C,OAC3DY,SAASC,UAAYH,KAAK9D,OAC1B8D,KAAKxD,MAAM8B,UAAUjD,S,kCAKzB,WACIkD,cAAcyB,KAAKxD,MAAM8C,S,gCAG7B,WACEU,KAAK1C,iBACL0C,KAAKpB,iBACLoB,KAAKjB,iB,oBA0OP,WAEE,OACE,mCACG,sBAAK7E,UAAU,UAAf,UACC,cAACM,EAAD,CACCD,MAAOyF,KAAKxD,MAAMjC,MAClBkB,MAAOuE,KAAKxD,MAAMf,MAClB8D,WAAYS,KAAKxD,MAAM+C,WACvB9E,MAAOuF,KAAKxD,MAAM8B,UAClB5D,aAAcsF,KAAKtF,aACnBC,cAAeqF,KAAKrF,cACpBC,aAAcoF,KAAKpF,aACnBC,eAAgBmF,KAAKnF,eACrBC,cAAekF,KAAKlF,cACpBC,gBAAiBiF,KAAKjF,kBAEvB,sBAAKb,UAAU,OAAf,UACE,cAAC,EAAD,CAAOP,gBAAiBqG,KAAKxD,MAAM7C,kBACnC,cAACS,EAAD,CAAMC,KAAM2F,KAAKxD,MAAMnC,UAEvB2F,KAAKxD,MAAMiC,MACd,qCACE,sBAAKvE,UAAU,QAAf,UACC,sBAAKA,UAAU,gBAAf,UACE,oBAAIA,UAAU,sBAAd,uBACA,qBAAKA,UAAU,yBAAf,kCAGE,qBAAKA,UAAU,cAAf,SACE,oBAAIA,UAAU,cAAd,SACGwB,aAAaC,QAAb,cAAqCD,aAAaC,QAAb,aAAkCC,MAAM,KAAKhC,KAAI,SAACgE,EAAI9D,GAE1F,OACE,oBAAII,UAAU,mBAAd,mBAAiDJ,EAAM,EAAvD,aAA6D8D,IAAvB9D,UAK9C,qBAAKI,UAAU,gBAAf,SACE,sBAAKA,UAAU,qBAAf,mBAA0C,yCAA1C,2BAGN,qBAAKA,UAAU,mBAEb,Y,GA7UQkG,IAAMC,WCZb,MAA0B,sCCA1B,MAA0B,uCCA1B,MAA0B,oCCA1B,MAA0B,sCC8E1BC,E,kDAtEb,WAAY5G,GAAO,IAAD,8BAChB,cAAMA,IAcR0F,UAAY,SAACmB,GAEX,EAAK7D,SAAS,CAAC8D,SAASD,KAjBR,EAoBlBrE,OAAS,SAACC,GAES,MADjBA,EAAIA,GAAKC,OAAOC,OACXC,SACH,EAAK8C,WAAU,IApBjB,EAAK5C,MAAQ,CACXgE,UAAS,GAJK,E,qDASlB,WAEIN,SAASC,UAAYH,KAAK9D,S,oBAkB9B,WAAS,IAAD,OAEN,OACE,qBAAKhC,UAAU,WAAf,SAEK8F,KAAKxD,MAAMgE,SA6BZ,cAAC,EAAD,CAASpB,UAAWY,KAAKZ,YA5BzB,sBAAKlF,UAAU,OAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,oBAAIA,UAAU,UAAd,uCACA,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,kBAAf,uBACA,sBAAKA,UAAU,oBAAf,UACE,sBAAKA,UAAU,yBAAf,UACE,qBAAKgB,IAAKuF,EAASrF,IAAI,YACvB,qBAAKlB,UAAU,QAAf,yBAEF,sBAAKA,UAAU,0BAAf,UACE,qBAAKgB,IAAKwF,EAAYtF,IAAI,eAC1B,qBAAKlB,UAAU,QAAf,4BAEF,sBAAKA,UAAU,uBAAf,UACE,qBAAKgB,IAAKyF,EAAWvF,IAAI,cACzB,qBAAKlB,UAAU,QAAf,2BAEF,sBAAKA,UAAU,yBAAf,UACE,qBAAKgB,IAAK0F,EAAWxF,IAAI,cACzB,qBAAKlB,UAAU,QAAf,oCAKR,mBAAGc,QAAS,kBAAI,EAAKoE,WAAU,IAAOlF,UAAU,SAAhD,iC,GA7DMkG,IAAMC,WCDxBQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFb,SAASc,eAAe,W","file":"static/js/main.32ba8254.chunk.js","sourcesContent":["import React from 'react';\r\nimport './SnakeStyle.scss';\r\n\r\nexport default function SnakeComponent(props) {\r\n    return (\r\n        <div>\r\n            {props.snakeCordinates.map((cordinate, index) => {\r\n                \r\n                const points = {\r\n                    left:`${cordinate[0]}%`,\r\n                    top:`${cordinate[1]}%`,\r\n                }\r\n\r\n                return(\r\n                    <div key={index} className=\"snake-cordinates\" style={points}></div>\r\n                );\r\n            }\r\n        )}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './FoodStyle.scss';\r\n\r\nexport default function Food(props) {\r\n\r\n    const cordinate = {\r\n        left:`${props.food[0]}%`,\r\n        top:`${props.food[1]}%`\r\n    }\r\n\r\n    return (\r\n        <div className=\"food\" style={cordinate}></div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Lives(props) {\r\n   \r\n//    const lives = Array(props.lives);\r\n//    console.log(lives);\r\n    return (\r\n        <div>\r\n            Lives:<span className=\"lives\">{props.lives}</span>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/soundsOff.5c9aeea9.svg\";","export default __webpack_public_path__ + \"static/media/soundsOn.70bf0ded.svg\";","export default __webpack_public_path__ + \"static/media/musicOff.4d083f3f.svg\";","export default __webpack_public_path__ + \"static/media/musicOn.baa2ca42.svg\";","import React from 'react';\r\nimport Lives from './Lives/Lives';\r\nimport './HeaderStyle.scss';\r\nimport soundsOff from '../assets/icons/soundsOff.svg';\r\nimport soundsOn from '../assets/icons/soundsOn.svg';\r\nimport musicOff from '../assets/icons/musicOff.svg';\r\nimport musicOn from '../assets/icons/musicOn.svg';\r\n\r\nexport default function Header(props) {\r\n    let {music,turnOnSounds,turnOffSounds,musicVolumUp,musicVolumDown,soundsVolumUp,soundsVolumDown} = props;\r\n    \r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header__options\">\r\n                <button onClick={()=> music.pause()}>\r\n                    <img src={musicOff} alt=\"musicOff\"/>\r\n                </button>\r\n                <button onClick={()=> music.play()}>\r\n                    <img src={musicOn} alt=\"musicOn\"/>\r\n                </button>\r\n                <button onClick={()=> turnOffSounds()}>\r\n                    <img src={soundsOff} alt=\"soundsOff\"/>\r\n                </button>\r\n                <button onClick={()=> turnOnSounds()}>\r\n                    <img src={soundsOn} alt=\"soundsOn\"/>\r\n                </button>\r\n                <button onClick={() =>musicVolumUp()}>Music volume Up</button>\r\n                <button onClick={() =>musicVolumDown()}>Music volume Down</button>\r\n                <button onClick={() => soundsVolumUp()}>Sounds volume Up</button>\r\n                <button onClick={() => soundsVolumDown()}>Sounds volume Down</button>\r\n            </div>\r\n            <div className=\"header__info\">\r\n                <div className=\"score\">Score:<span>{props.score}</span></div>\r\n                <div className=\"high-score\">High Score:<span>{localStorage.getItem(`highScore`) && localStorage.getItem(\"highScore\").split(\",\")[0]}</span></div>\r\n                <Lives lives={props.lives}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/dead.25ffc265.mp3\";","export default __webpack_public_path__ + \"static/media/eat.5ff4f174.mp3\";","export default __webpack_public_path__ + \"static/media/up.46ece3fb.mp3\";","export default __webpack_public_path__ + \"static/media/down.43ca33f5.mp3\";","export default __webpack_public_path__ + \"static/media/left.f6661b15.mp3\";","export default __webpack_public_path__ + \"static/media/right.a422b7d1.mp3\";","export default __webpack_public_path__ + \"static/media/mainSound.4c6110aa.mp3\";","import React from 'react';\r\nimport Snake from './Snake/SnakeComponent';\r\nimport Food from './Food/Food';\r\nimport Header from './Header/Header';\r\nimport deadAudio from './assets/audio/dead.mp3';\r\nimport eatAudio from './assets/audio/eat.mp3';\r\nimport upAudio from './assets/audio/up.mp3';\r\nimport downAudio from './assets/audio/down.mp3';\r\nimport leftAudio from './assets/audio/left.mp3';\r\nimport rightAudio from './assets/audio/right.mp3';\r\nimport mainSoundAudio from './assets/audio/mainSound.mp3';\r\n\r\nclass AppTemp extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n      snakeCordinates:[\r\n        [0,0],\r\n        [4,0]\r\n      ],\r\n      food:this.setRandomCordinates(),\r\n      direction:'RIGHT',\r\n      speed:100,\r\n      lives:3,\r\n      score:0,\r\n      hightScore:0,\r\n       dead:new Audio(),\r\n       eat:new Audio(),\r\n       up:new Audio(),\r\n       right:new Audio(),\r\n       left:new Audio(),\r\n       down:new Audio(),\r\n       mainSound:new Audio(),\r\n       timer:0,\r\n       popUp:false,\r\n       isSounds:true\r\n       \r\n    }\r\n\r\n\r\n    this.state.dead.src = deadAudio;\r\n    this.state.eat.src = eatAudio;\r\n    this.state.up.src = upAudio;\r\n    this.state.right.src = rightAudio;\r\n    this.state.left.src = leftAudio;\r\n    this.state.down.src = downAudio;\r\n    this.state.mainSound.src = mainSoundAudio;\r\n\r\n  }\r\n\r\n  componentDidMount(){\r\n   this.state.timer = setInterval(this.movementsSnake,this.state.speed)\r\n      document.onkeydown = this.setKey;\r\n      this.state.mainSound.play();\r\n     \r\n  }\r\n\r\n\r\n  componentWillUnmount(){\r\n      clearInterval(this.state.speed)\r\n  }\r\n\r\n  componentDidUpdate(){\r\n    this.collisionWalls();\r\n    this.collisionSnake();\r\n    this.collisionEat();\r\n    \r\n  }\r\n\r\n\r\n\r\n  setRandomCordinates = () => {\r\n    let min = 1;\r\n    let max = 90;\r\n    let x = Math.floor((Math.random() * (max - min + 2) + min) / 2) * 2;\r\n    let y = Math.floor((Math.random() * (max - min + 2) + min) / 2) * 2;\r\n   \r\n\r\n    return [x, y];\r\n  }\r\n\r\n  setKey = (e)=> {\r\n    e = e || window.event;\r\n    switch (e.keyCode) {\r\n      case 38:\r\n        if (![\"UP\", \"DOWN\"].includes(this.state.direction)) {\r\n          this.setState({ direction: \"UP\" });\r\n          if(this.state.isSounds){\r\n            this.state.up.play();\r\n          }\r\n          \r\n        }\r\n        break;\r\n      case 40:\r\n        if (![\"UP\", \"DOWN\"].includes(this.state.direction)) {\r\n          this.setState({ direction: \"DOWN\" });\r\n          if(this.state.isSounds){\r\n            this.state.down.play();\r\n          }\r\n          \r\n        }\r\n        break;\r\n      case 37:\r\n        if (![\"LEFT\", \"RIGHT\"].includes(this.state.direction)) {\r\n          this.setState({ direction: \"LEFT\" });\r\n          if(this.state.isSounds){\r\n             this.state.left.play();\r\n          }\r\n         \r\n        }\r\n        break;\r\n      case 39:\r\n        if (![\"LEFT\", \"RIGHT\"].includes(this.state.direction)) {\r\n          this.setState({ direction: \"RIGHT\" });\r\n          if(this.state.isSounds){\r\n            this.state.right.play();\r\n          }\r\n          \r\n        }\r\n        break;\r\n      case 13:\r\n        this.restartGame();\r\n        break;\r\n    }\r\n  };\r\n\r\n \r\n\r\n  movementsSnake = () => {\r\n    let square = [...this.state.snakeCordinates];\r\n    let front = square[square.length - 1];\r\n\r\n    switch(this.state.direction){\r\n      case 'RIGHT':\r\n        front = [front[0] + 2, front[1]];\r\n        break;\r\n      case 'DOWN':\r\n        front = [front[0], front[1] + 2];\r\n        break;\r\n      case 'LEFT':\r\n        front = [front[0] - 2, front[1]];\r\n        break; \r\n      case 'UP':\r\n        front = [front[0], front[1] - 2];\r\n        break;   \r\n    }\r\n    square.push(front);\r\n    square.shift();\r\n    this.setState({snakeCordinates:square});\r\n  }\r\n\r\n\r\n  // Collisions functions\r\n\r\n  collisionWalls = () => {\r\n    let front = this.state.snakeCordinates[this.state.snakeCordinates.length - 1];\r\n    if(front[0] >= 100 || front[1] >= 100 || front[0] < 0 || front[1] < 0){\r\n      if(this.state.lives == 1){\r\n        let scoreKey = `highScore`;\r\n        let lastData = localStorage.getItem(scoreKey) || \"\";\r\n        console.log(lastData);\r\n\r\n        let intData = lastData != \"\" ? lastData.split(\",\").map(el => +el) : [];\r\n        console.log(intData);\r\n        intData.push(this.state.score);\r\n        intData.sort((a,b) => b - a);\r\n        console.log(intData);\r\n        let mainCount = intData.length > 10 ? 10 : intData.length;\r\n        let mainResult = intData.splice(0,mainCount);\r\n        \r\n        \r\n        localStorage.setItem(scoreKey,`${mainResult.join(',')}`);\r\n        if(this.state.isSounds){\r\n          this.state.dead.play(); \r\n        }\r\n        this.state.mainSound.pause();\r\n        clearInterval(this.state.timer);\r\n        this.setState({popUp:true});\r\n        \r\n      }\r\n      if(this.state.isSounds){\r\n        this.state.dead.play();\r\n      }\r\n      this.removeLive();\r\n      this.endGame();\r\n\r\n    }\r\n  }\r\n\r\n  collisionSnake = () => {\r\n    let square = [...this.state.snakeCordinates];\r\n    let front = square[square.length - 1];\r\n    square.pop();\r\n\r\n    square.forEach(el => {\r\n      if(front[0] == el[0] && front[1] == el[1]){\r\n        if(this.state.isSounds){\r\n          this.state.dead.play();\r\n        }\r\n        this.endGame();\r\n        this.removeLive();\r\n        \r\n      }\r\n    })\r\n  }\r\n\r\n  collisionEat = () => {\r\n    let front = this.state.snakeCordinates[this.state.snakeCordinates.length - 1];\r\n    let food = this.state.food;\r\n    \r\n    if(front[0] == food[0] && front[1] == food[1]){\r\n      if(this.state.isSounds){\r\n        this.state.eat.play();\r\n      }\r\n        \r\n      this.setState({\r\n        food:this.setRandomCordinates(),\r\n        score:this.state.score+10,\r\n        \r\n      });\r\n      this.growSnake();\r\n    }\r\n  }\r\n\r\n  growSnake = () => {\r\n    let newSquares = [...this.state.snakeCordinates];\r\n    newSquares.unshift([]);\r\n    this.setState({snakeCordinates:newSquares});\r\n  }\r\n\r\n  removeLive = () => {\r\n    this.setState({lives:this.state.lives - 1});\r\n  }\r\n\r\n\r\n  \r\n  endGame = () => {\r\n    this.setState({\r\n        snakeCordinates:[\r\n          [0,0],\r\n          [4,0]\r\n        ],\r\n        direction:'RIGHT',\r\n    })  \r\n    \r\n  }\r\n\r\n  restartGame = () => {\r\n    \r\n    this.setState((state) => {\r\n      return {popUp:false};\r\n    });\r\n    this.props.startGame(false);\r\n    \r\n  }\r\n\r\n  turnOnSounds = () => {\r\n    this.setState((state) => {return{isSounds:true}})\r\n  }\r\n  \r\n  turnOffSounds = () => {\r\n    this.setState((state) => {return{isSounds:false}})\r\n  }\r\n\r\n  musicVolumUp = () => {\r\n    if(this.state.mainSound.volume < 1){\r\n      this.state.mainSound.volume += 0.2;\r\n    }\r\n  \r\n  }\r\n\r\n  musicVolumDown = () => {\r\n    if(this.state.mainSound.volume >= 0.2){\r\n      this.state.mainSound.volume -= 0.2;\r\n    }\r\n  \r\n  }\r\n\r\n  soundsVolumDown = () => {\r\n    let soundsArr = [this.state.up,this.state.down,this.state.left,this.state.right,this.state.eat,this.state.dead];\r\n    soundsArr.forEach(el => {\r\n      if(el.volume >= 0.2){\r\n        el.volume -= 0.2;\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  soundsVolumUp = () => {\r\n    let soundsArr = [this.state.up,this.state.down,this.state.left,this.state.right,this.state.eat,this.state.dead];\r\n    soundsArr.forEach(el => {\r\n      if(el.volume < 1){\r\n        el.volume += 0.2;\r\n      }\r\n    })\r\n  }\r\n\r\n  \r\n\r\n  render(){\r\n    \r\n    return (\r\n      <>\r\n         <div className=\"wrapper\">\r\n          <Header\r\n           lives={this.state.lives}\r\n           score={this.state.score}\r\n           hightScore={this.state.hightScore}\r\n           music={this.state.mainSound}\r\n           turnOnSounds={this.turnOnSounds}\r\n           turnOffSounds={this.turnOffSounds}\r\n           musicVolumUp={this.musicVolumUp}\r\n           musicVolumDown={this.musicVolumDown}\r\n           soundsVolumUp={this.soundsVolumUp}\r\n           soundsVolumDown={this.soundsVolumDown}\r\n           />\r\n          <div className=\"area\">\r\n            <Snake snakeCordinates={this.state.snakeCordinates}/>\r\n            <Food food={this.state.food}/>\r\n          </div>\r\n          { this.state.popUp ? \r\n         <>\r\n           <div className=\"popUp\">\r\n            <div className=\"popUp__header\">\r\n              <h2 className=\"popUp__header-title\">Game over</h2>\r\n              <div className=\"popUp__header-subtitle\">High score table:</div>\r\n            </div>\r\n            \r\n                <div className=\"popUp__body\">\r\n                  <ul className=\"popUp__list\">\r\n                    {localStorage.getItem(`highScore`) && localStorage.getItem(`highScore`).split(\",\").map((el, index) => {\r\n                    \r\n                      return(\r\n                        <li className=\"popUp__list-item\" key={index}>{`${index+1}) ${el}`}</li>\r\n                      );\r\n                    })} \r\n                  </ul>\r\n                </div> \r\n                <div className=\"popUp__footer\">\r\n                  <div className=\"popUp__footer-text\">Press <span>Enter</span> to restart Game</div>\r\n                </div>\r\n            </div>\r\n            <div className=\"darkWrapper\"></div>\r\n         </>\r\n            : \"\" \r\n           }\r\n          {/* <button onClick={()=>clearInterval(this.state.timer)}>Pause</button> */}\r\n         \r\n        </div>\r\n      </>\r\n    );\r\n  };\r\n}\r\n\r\nexport default AppTemp;\r\n","export default __webpack_public_path__ + \"static/media/arrowLeft.3cc76821.svg\";","export default __webpack_public_path__ + \"static/media/arrowRight.fb19f8f9.svg\";","export default __webpack_public_path__ + \"static/media/arrowUp.f950f788.svg\";","export default __webpack_public_path__ + \"static/media/arrowDown.243341a9.svg\";","import React from 'react';\nimport AppTemp from './AppTemp';\nimport arrowLeft from './assets/icons/arrowLeft.svg';\nimport arrowRight from './assets/icons/arrowRight.svg';\nimport arrowUp from './assets/icons/arrowUp.svg';\nimport arrowDown from './assets/icons/arrowDown.svg';\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n\n    this.state = {\n      redyGame:false,\n    }\n\n  }\n\n  componentDidMount(){\n    \n      document.onkeydown = this.setKey;\n  }\n  \n\n  startGame = (value) => {\n\n    this.setState({redyGame:value})\n  }\n\n  setKey = (e) => {\n    e = e || window.event;\n    if(e.keyCode === 13){\n      this.startGame(true)\n      \n    }\n  }\n\n\n  render(){\n\n    return(\n      <div className=\"wrappApp\">\n        {\n          !this.state.redyGame ?\n          <div className=\"card\">\n            <div className=\"content-wrapper\">\n              <h2 className=\"heading\">Welcome to the snake game</h2>\n              <div className=\"controls\">\n                <div className=\"controls__title\">Controls:</div>\n                <div className=\"controls__buttons\">\n                  <div className=\"controls__buttons-left\">\n                    <img src={arrowUp} alt=\"arrowUp\"/>\n                    <div className=\"descr\">Press Up</div>\n                  </div>\n                  <div className=\"controls__buttons-right\">\n                    <img src={arrowRight} alt=\"arrowRight\"/>\n                    <div className=\"descr\">Press Right</div>\n                  </div>\n                  <div className=\"controls__buttons-up\">\n                    <img src={arrowLeft} alt=\"arrowLeft\"/>\n                    <div className=\"descr\">Press Left</div>\n                  </div>\n                  <div className=\"controls__buttons-down\">\n                    <img src={arrowDown} alt=\"arrowDown\"/>\n                    <div className=\"descr\">Press Down</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <a onClick={()=>this.startGame(true)} className=\"button\">Start Game</a>\n          </div>\n           :\n          <AppTemp startGame={this.startGame}/>\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}